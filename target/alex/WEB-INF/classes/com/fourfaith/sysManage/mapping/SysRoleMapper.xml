<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fourfaith.sysManage.dao.SysRoleMapper">
	<resultMap id="BaseResultMap" type="com.fourfaith.sysManage.model.SysRole">
		<id column="Id" property="id" jdbcType="CHAR" />
		<result column="EnterpriseId" property="enterpriseid" jdbcType="CHAR" />
		<result column="RoleCode" property="rolecode" jdbcType="VARCHAR" />
		<result column="RoleName" property="rolename" jdbcType="VARCHAR" />
		<result column="EnabledState" property="enabledstate" jdbcType="INTEGER" />
		<result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
		<result column="UpdateTime" property="updatetime" jdbcType="TIMESTAMP" />
		<result column="RoleRemark" property="roleremark" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		Id, EnterpriseId, RoleCode, RoleName, EnabledState, CreateTime, UpdateTime, RoleRemark
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from SysRole
		where Id = #{id,jdbcType=CHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from SysRole
		where Id = #{id,jdbcType=CHAR}
	</delete>
	<insert id="insert" parameterType="com.fourfaith.sysManage.model.SysRole">
		insert into SysRole (Id, EnterpriseId, RoleCode,
		RoleName, EnabledState, CreateTime,
		UpdateTime, RoleRemark)
		values (#{id,jdbcType=CHAR}, #{enterpriseid,jdbcType=CHAR}, #{rolecode,jdbcType=VARCHAR},
		#{rolename,jdbcType=VARCHAR}, #{enabledstate,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP},
		#{updatetime,jdbcType=TIMESTAMP}, #{roleremark,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.fourfaith.sysManage.model.SysRole">
		insert into SysRole
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				Id,
			</if>
			<if test="enterpriseid != null">
				EnterpriseId,
			</if>
			<if test="rolecode != null">
				RoleCode,
			</if>
			<if test="rolename != null">
				RoleName,
			</if>
			<if test="enabledstate != null">
				EnabledState,
			</if>
			<if test="createtime != null">
				CreateTime,
			</if>
			<if test="updatetime != null">
				UpdateTime,
			</if>
			<if test="roleremark != null">
				RoleRemark,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=CHAR},
			</if>
			<if test="enterpriseid != null">
				#{enterpriseid,jdbcType=CHAR},
			</if>
			<if test="rolecode != null">
				#{rolecode,jdbcType=VARCHAR},
			</if>
			<if test="rolename != null">
				#{rolename,jdbcType=VARCHAR},
			</if>
			<if test="enabledstate != null">
				#{enabledstate,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				#{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="roleremark != null">
				#{roleremark,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.fourfaith.sysManage.model.SysRole">
		update SysRole
		<set>
			<if test="enterpriseid != null">
				EnterpriseId = #{enterpriseid,jdbcType=CHAR},
			</if>
			<if test="rolecode != null">
				RoleCode = #{rolecode,jdbcType=VARCHAR},
			</if>
			<if test="rolename != null">
				RoleName = #{rolename,jdbcType=VARCHAR},
			</if>
			<if test="enabledstate != null">
				EnabledState = #{enabledstate,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				CreateTime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="roleremark != null">
				RoleRemark = #{roleremark,jdbcType=VARCHAR},
			</if>
		</set>
		where Id = #{id,jdbcType=CHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.fourfaith.sysManage.model.SysRole">
		update SysRole
		set EnterpriseId = #{enterpriseid,jdbcType=CHAR},
		RoleCode = #{rolecode,jdbcType=VARCHAR},
		RoleName = #{rolename,jdbcType=VARCHAR},
		EnabledState = #{enabledstate,jdbcType=INTEGER},
		CreateTime = #{createtime,jdbcType=TIMESTAMP},
		UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
		RoleRemark = #{roleremark,jdbcType=VARCHAR}
		where Id = #{id,jdbcType=CHAR}
	</update>

	<select id="getByRoleId" resultMap="BaseResultMap" parameterType="map">
		SELECT
		<include refid="Base_Column_List" />
		FROM SysRole
		where 1=1
		<if test="enterpriseid != null">
			AND EnterpriseId = #{enterpriseid,jdbcType=VARCHAR}
		</if>
		<if test="rolecode != null">
			AND RoleCode = #{rolecode,jdbcType=VARCHAR}
		</if>
	</select>

	<select id="getCount" resultType="java.lang.Integer" parameterType="map">
		SELECT count(*) FROM SysRole
		where 1=1
		<if test="enterpriseid != null">
			AND EnterpriseId = #{enterpriseid,jdbcType=VARCHAR}
		</if>
		<if test="rolecode != null">
			AND RoleCode = #{rolecode,jdbcType=VARCHAR}
		</if>
		<if test="rolecode_notEqual != null">
			AND RoleCode != #{rolecode_notEqual,jdbcType=VARCHAR}
		</if>
		<if test="rolename != null">
			AND RoleName = #{rolename,jdbcType=VARCHAR}
		</if>
		<if test="rolename_fuzzy != null">
			AND RoleName like '%${rolename_fuzzy}%'
		</if>
		<if test="enabledstate != null">
			AND EnabledState = #{enabledstate,jdbcType=INTEGER}
		</if>
		<if test="enabledstate_notEqual != null">
			AND EnabledState != #{enabledstate_notEqual,jdbcType=INTEGER}
		</if>
	</select>

	<select id="getList" resultMap="BaseResultMap" parameterType="map">
		SELECT * FROM SysRole
		where 1=1
		<if test="enterpriseid != null">
			AND EnterpriseId = #{enterpriseid,jdbcType=VARCHAR}
		</if>
		<if test="rolecode != null">
			AND RoleCode = #{rolecode,jdbcType=VARCHAR}
		</if>
		<if test="rolecode_notEqual != null">
			AND RoleCode != #{rolecode_notEqual,jdbcType=VARCHAR}
		</if>
		<if test="rolename != null">
			AND RoleName = #{rolename,jdbcType=VARCHAR}
		</if>
		<if test="rolename_fuzzy != null">
			AND RoleName like '%${rolename_fuzzy}%'
		</if>
		<if test="enabledstate != null">
			AND EnabledState = #{roleflag,jdbcType=INTEGER}
		</if>
		<if test="enabledstate_notEqual != null">
			AND EnabledState != #{enabledstate_notEqual,jdbcType=INTEGER}
		</if>
		order by UpdateTime desc
		<if test="pageStart!= null and pageEnd!= null">
			limit ${pageStart},${pageEnd}
		</if>
	</select>
</mapper>